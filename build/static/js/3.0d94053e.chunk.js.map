{"version":3,"sources":["components/carousel/carouselIMGCompiler.js"],"names":["carouselIMGCompiler","_Component","Object","_Users_zs_Desktop_ZSP_site_2020_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__","_super","_createSuper","_this","_Users_zs_Desktop_ZSP_site_2020_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_len","arguments","length","args","Array","_key","call","apply","concat","state","img","ImgInfo","props","gallery","imageGalleryName","imgPath","process","imgPathArr","hiddenIMG","_Users_zs_Desktop_ZSP_site_2020_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","src","alt","style","display","console","log","_this2","forEach","element","push","setState","_this3","counter","map","imageUrl","handleImgLoader","Component"],"mappings":"gpBAKO,IAAMA,EAAb,SAAAC,GAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAAC,GAAA,IAAAG,EAAAC,EAAAL,GAAA,SAAAA,IAAA,IAAAM,EAAAJ,OAAAK,EAAA,EAAAL,CAAAM,KAAAR,GAAA,QAAAS,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAF,EAAAW,KAAAC,MAAAZ,EAAA,CAAAI,MAAAS,OAAAL,KAGIM,MAAQ,CACRC,IAAKC,EAAQd,EAAKe,MAAMC,SAAS,GAA5B,eACLC,iBAAkBjB,EAAKe,MAAMC,QAC7BE,QAASC,YAAuCnB,EAAKe,MAAMC,QAC3DI,WAAY,GAGZC,UAAW,QAVfrB,EAAA,OAAAJ,OAAA0B,EAAA,EAAA1B,CAAAF,EAAA,EAAA6B,IAAA,kBAAAC,MAAA,SAekBJ,GACV,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXC,IAAKT,EACLU,IAAI,WACJC,MAAO,CAACC,QAAS9B,KAAKU,MAAMS,gBArBhD,CAAAE,IAAA,mBAAAC,MAAA,SA2BqBJ,GACba,QAAQC,IAAId,KA5BpB,CAAAG,IAAA,oBAAAC,MAAA,WAyCsB,IAAAW,EAAAjC,KACRkB,EAAa,GAEnBN,EAAQZ,KAAKa,MAAMC,SAASoB,QAAQ,SAAAC,GAAO,OAAIjB,EAAWkB,KAAKH,EAAKvB,MAAMM,QAAU,IAAMmB,EAAO,kBAEjGnC,KAAKqC,SAAS,CACVnB,WAAYA,MA/CxB,CAAAG,IAAA,SAAAC,MAAA,WAmDa,IAAAgB,EAAAtC,KAEP,OACEuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXC,IAAK3B,KAAKU,MAAMQ,WAAWlB,KAAKa,MAAM0B,SACtCX,IAAK5B,KAAKa,MAAMe,MAGnB5B,KAAKU,MAAMQ,WAAWsB,IAAI,SAAAC,GAAQ,OAAIH,EAAKI,gBAAgBD,UA7DxEjD,EAAA,CAAyCmD,aAmExBnD","file":"static/js/3.0d94053e.chunk.js","sourcesContent":["import React, { Component, lazy, Suspense } from 'react';\nimport ImgInfo from '../utilities/image.json';\n\n\n\nexport class carouselIMGCompiler extends Component {\n\n  \n    state = {\n    img: ImgInfo[this.props.gallery][0][\"image_fileName\"],\n    imageGalleryName: this.props.gallery,\n    imgPath: process.env.PUBLIC_URL  + '/images/' + this.props.gallery,\n    imgPathArr: [],\n\n    //image visablility\n    hiddenIMG: \"none\",\n    \n  }\n\n\n  handleImgLoader(imgPathArr) {\n        return (\n            <div className=\"carouselIMGCompiler-Child-img\" >\n                <img className=\"carouselIMGCompiler-visible-img\" \n                    src={imgPathArr} \n                    alt=\"Whatever\" \n                    style={{display: this.state.hiddenIMG}} ></img>\n                </div>\n        )\n    }\n\n\n    handleImgDisplay(imgPathArr) {\n        console.log(imgPathArr)\n        // const visableIMG = imgPathArr[0];\n\n        // return (\n        //     <div className=\"carouselIMGCompiler-Child-img\" >\n        //     <img className=\"carouselIMGCompiler-visible-img\" \n        //         src={visableIMG} \n        //         alt=\"Whatever\" \n        //         style={{display: this.state.displayIMG}} ></img>\n        //     </div>\n        // )\n    }\n  \n  componentDidMount() {\n        const imgPathArr = []; \n\n        ImgInfo[this.props.gallery].forEach(element => imgPathArr.push(this.state.imgPath + \"/\" + element[\"image_fileName\"]));\n\n        this.setState({\n            imgPathArr: imgPathArr,\n        });\n    }\n\n    render() {\n\n      return (\n        <div className=\"carouselIMGCompiler-Parent\" >\n            {/* This is the visible image */}\n            <img className=\"carouselIMGCompiler-visableIMG\" \n                src={this.state.imgPathArr[this.props.counter]} \n                alt={this.props.alt}\n                ></img>\n            {/* These are the images that are loaded but are hidden */}\n            {this.state.imgPathArr.map(imageUrl => this.handleImgLoader(imageUrl))}\n            </div>\n      )\n    }\n  }\n\n  export default carouselIMGCompiler;"],"sourceRoot":""}