{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar CaseSensitiveModulesWarning = require(\"./CaseSensitiveModulesWarning\");\n\nvar WarnCaseSensitiveModulesPlugin =\n/*#__PURE__*/\nfunction () {\n  function WarnCaseSensitiveModulesPlugin() {\n    _classCallCheck(this, WarnCaseSensitiveModulesPlugin);\n  }\n\n  _createClass(WarnCaseSensitiveModulesPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"WarnCaseSensitiveModulesPlugin\", function (compilation) {\n        compilation.hooks.seal.tap(\"WarnCaseSensitiveModulesPlugin\", function () {\n          var moduleWithoutCase = new Map();\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = compilation.modules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var _module = _step.value;\n\n              var identifier = _module.identifier().toLowerCase();\n\n              var array = moduleWithoutCase.get(identifier);\n\n              if (array) {\n                array.push(_module);\n              } else {\n                moduleWithoutCase.set(identifier, [_module]);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = moduleWithoutCase[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var pair = _step2.value;\n              var _array = pair[1];\n\n              if (_array.length > 1) {\n                compilation.warnings.push(new CaseSensitiveModulesWarning(_array));\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        });\n      });\n    }\n  }]);\n\n  return WarnCaseSensitiveModulesPlugin;\n}();\n\nmodule.exports = WarnCaseSensitiveModulesPlugin;","map":null,"metadata":{},"sourceType":"script"}