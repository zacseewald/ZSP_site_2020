{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar NodeWatchFileSystem = require(\"./NodeWatchFileSystem\");\n\nvar NodeOutputFileSystem = require(\"./NodeOutputFileSystem\");\n\nvar NodeJsInputFileSystem = require(\"enhanced-resolve/lib/NodeJsInputFileSystem\");\n\nvar CachedInputFileSystem = require(\"enhanced-resolve/lib/CachedInputFileSystem\");\n\nvar NodeEnvironmentPlugin =\n/*#__PURE__*/\nfunction () {\n  function NodeEnvironmentPlugin() {\n    _classCallCheck(this, NodeEnvironmentPlugin);\n  }\n\n  _createClass(NodeEnvironmentPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.inputFileSystem = new CachedInputFileSystem(new NodeJsInputFileSystem(), 60000);\n      var inputFileSystem = compiler.inputFileSystem;\n      compiler.outputFileSystem = new NodeOutputFileSystem();\n      compiler.watchFileSystem = new NodeWatchFileSystem(compiler.inputFileSystem);\n      compiler.hooks.beforeRun.tap(\"NodeEnvironmentPlugin\", function (compiler) {\n        if (compiler.inputFileSystem === inputFileSystem) inputFileSystem.purge();\n      });\n    }\n  }]);\n\n  return NodeEnvironmentPlugin;\n}();\n\nmodule.exports = NodeEnvironmentPlugin;","map":null,"metadata":{},"sourceType":"script"}