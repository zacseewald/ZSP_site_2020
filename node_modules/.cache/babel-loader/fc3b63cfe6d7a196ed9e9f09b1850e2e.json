{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar DependencyReference = require(\"./DependencyReference\");\n\nvar HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n\nvar Template = require(\"../Template\");\n\nvar HarmonyLinkingError = require(\"../HarmonyLinkingError\");\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {\"missing\"|\"unused\"|\"empty-star\"|\"reexport-non-harmony-default\"|\"reexport-named-default\"|\"reexport-namespace-object\"|\"reexport-non-harmony-default-strict\"|\"reexport-fake-namespace-object\"|\"rexport-non-harmony-undefined\"|\"safe-reexport\"|\"checked-reexport\"|\"dynamic-reexport\"} ExportModeType */\n\n/** @type {Map<string, string>} */\n\n\nvar EMPTY_MAP = new Map();\n\nvar ExportMode =\n/**\n * @param {ExportModeType} type type of the mode\n */\nfunction ExportMode(type) {\n  _classCallCheck(this, ExportMode);\n\n  /** @type {ExportModeType} */\n  this.type = type;\n  /** @type {string|null} */\n\n  this.name = null;\n  /** @type {Map<string, string>} */\n\n  this.map = EMPTY_MAP;\n  /** @type {Module|null} */\n\n  this.module = null;\n  /** @type {string|null} */\n\n  this.userRequest = null;\n};\n\nvar EMPTY_STAR_MODE = new ExportMode(\"empty-star\");\n\nvar HarmonyExportImportedSpecifierDependency =\n/*#__PURE__*/\nfunction (_HarmonyImportDepende) {\n  _inherits(HarmonyExportImportedSpecifierDependency, _HarmonyImportDepende);\n\n  function HarmonyExportImportedSpecifierDependency(request, originModule, sourceOrder, parserScope, id, name, activeExports, otherStarExports, strictExportPresence) {\n    var _this;\n\n    _classCallCheck(this, HarmonyExportImportedSpecifierDependency);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HarmonyExportImportedSpecifierDependency).call(this, request, originModule, sourceOrder, parserScope));\n    _this.id = id;\n    _this.name = name;\n    _this.activeExports = activeExports;\n    _this.otherStarExports = otherStarExports;\n    _this.strictExportPresence = strictExportPresence;\n    return _this;\n  }\n\n  _createClass(HarmonyExportImportedSpecifierDependency, [{\n    key: \"getMode\",\n    value: function getMode(ignoreUnused) {\n      var _this2 = this;\n\n      var name = this.name;\n      var id = this.id;\n      var used = this.originModule.isUsed(name);\n      var importedModule = this._module;\n\n      if (!importedModule) {\n        var _mode = new ExportMode(\"missing\");\n\n        _mode.userRequest = this.userRequest;\n        return _mode;\n      }\n\n      if (!ignoreUnused && (name ? !used : this.originModule.usedExports === false)) {\n        var _mode2 = new ExportMode(\"unused\");\n\n        _mode2.name = name || \"*\";\n        return _mode2;\n      }\n\n      var strictHarmonyModule = this.originModule.buildMeta.strictHarmonyModule;\n\n      if (name && id === \"default\" && importedModule.buildMeta) {\n        if (!importedModule.buildMeta.exportsType) {\n          var _mode3 = new ExportMode(strictHarmonyModule ? \"reexport-non-harmony-default-strict\" : \"reexport-non-harmony-default\");\n\n          _mode3.name = name;\n          _mode3.module = importedModule;\n          return _mode3;\n        } else if (importedModule.buildMeta.exportsType === \"named\") {\n          var _mode4 = new ExportMode(\"reexport-named-default\");\n\n          _mode4.name = name;\n          _mode4.module = importedModule;\n          return _mode4;\n        }\n      }\n\n      var isNotAHarmonyModule = importedModule.buildMeta && !importedModule.buildMeta.exportsType;\n\n      if (name) {\n        var _mode5;\n\n        if (id) {\n          // export { name as name }\n          if (isNotAHarmonyModule && strictHarmonyModule) {\n            _mode5 = new ExportMode(\"rexport-non-harmony-undefined\");\n            _mode5.name = name;\n          } else {\n            _mode5 = new ExportMode(\"safe-reexport\");\n            _mode5.map = new Map([[name, id]]);\n          }\n        } else {\n          // export { * as name }\n          if (isNotAHarmonyModule && strictHarmonyModule) {\n            _mode5 = new ExportMode(\"reexport-fake-namespace-object\");\n            _mode5.name = name;\n          } else {\n            _mode5 = new ExportMode(\"reexport-namespace-object\");\n            _mode5.name = name;\n          }\n        }\n\n        _mode5.module = importedModule;\n        return _mode5;\n      }\n\n      var hasUsedExports = Array.isArray(this.originModule.usedExports);\n      var hasProvidedExports = Array.isArray(importedModule.buildMeta.providedExports);\n\n      var activeFromOtherStarExports = this._discoverActiveExportsFromOtherStartExports(); // export *\n\n\n      if (hasUsedExports) {\n        // reexport * with known used exports\n        if (hasProvidedExports) {\n          var _map = new Map(this.originModule.usedExports.filter(function (id) {\n            if (id === \"default\") return false;\n            if (_this2.activeExports.has(id)) return false;\n            if (activeFromOtherStarExports.has(id)) return false;\n            if (!importedModule.buildMeta.providedExports.includes(id)) return false;\n            return true;\n          }).map(function (item) {\n            return [item, item];\n          }));\n\n          if (_map.size === 0) {\n            return EMPTY_STAR_MODE;\n          }\n\n          var _mode7 = new ExportMode(\"safe-reexport\");\n\n          _mode7.module = importedModule;\n          _mode7.map = _map;\n          return _mode7;\n        }\n\n        var map = new Map(this.originModule.usedExports.filter(function (id) {\n          if (id === \"default\") return false;\n          if (_this2.activeExports.has(id)) return false;\n          if (activeFromOtherStarExports.has(id)) return false;\n          return true;\n        }).map(function (item) {\n          return [item, item];\n        }));\n\n        if (map.size === 0) {\n          return EMPTY_STAR_MODE;\n        }\n\n        var _mode6 = new ExportMode(\"checked-reexport\");\n\n        _mode6.module = importedModule;\n        _mode6.map = map;\n        return _mode6;\n      }\n\n      if (hasProvidedExports) {\n        var _map2 = new Map(importedModule.buildMeta.providedExports.filter(function (id) {\n          if (id === \"default\") return false;\n          if (_this2.activeExports.has(id)) return false;\n          if (activeFromOtherStarExports.has(id)) return false;\n          return true;\n        }).map(function (item) {\n          return [item, item];\n        }));\n\n        if (_map2.size === 0) {\n          return EMPTY_STAR_MODE;\n        }\n\n        var _mode8 = new ExportMode(\"safe-reexport\");\n\n        _mode8.module = importedModule;\n        _mode8.map = _map2;\n        return _mode8;\n      }\n\n      var mode = new ExportMode(\"dynamic-reexport\");\n      mode.module = importedModule;\n      return mode;\n    }\n  }, {\n    key: \"getReference\",\n    value: function getReference() {\n      var mode = this.getMode(false);\n\n      switch (mode.type) {\n        case \"missing\":\n        case \"unused\":\n        case \"empty-star\":\n          return null;\n\n        case \"reexport-non-harmony-default\":\n        case \"reexport-named-default\":\n          return new DependencyReference(mode.module, [\"default\"], false, this.sourceOrder);\n\n        case \"reexport-namespace-object\":\n        case \"reexport-non-harmony-default-strict\":\n        case \"reexport-fake-namespace-object\":\n        case \"rexport-non-harmony-undefined\":\n          return new DependencyReference(mode.module, true, false, this.sourceOrder);\n\n        case \"safe-reexport\":\n        case \"checked-reexport\":\n          return new DependencyReference(mode.module, Array.from(mode.map.values()), false, this.sourceOrder);\n\n        case \"dynamic-reexport\":\n          return new DependencyReference(mode.module, true, false, this.sourceOrder);\n\n        default:\n          throw new Error(\"Unknown mode \".concat(mode.type));\n      }\n    }\n  }, {\n    key: \"_discoverActiveExportsFromOtherStartExports\",\n    value: function _discoverActiveExportsFromOtherStartExports() {\n      if (!this.otherStarExports) return new Set();\n      var result = new Set(); // try to learn impossible exports from other star exports with provided exports\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.otherStarExports[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var otherStarExport = _step.value;\n          var otherImportedModule = otherStarExport._module;\n\n          if (otherImportedModule && Array.isArray(otherImportedModule.buildMeta.providedExports)) {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = otherImportedModule.buildMeta.providedExports[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var exportName = _step2.value;\n                result.add(exportName);\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getExports\",\n    value: function getExports() {\n      if (this.name) {\n        return {\n          exports: [this.name],\n          dependencies: undefined\n        };\n      }\n\n      var importedModule = this.module;\n\n      if (!importedModule) {\n        // no imported module available\n        return {\n          exports: null,\n          dependencies: undefined\n        };\n      }\n\n      if (Array.isArray(importedModule.buildMeta.providedExports)) {\n        return {\n          exports: importedModule.buildMeta.providedExports.filter(function (id) {\n            return id !== \"default\";\n          }),\n          dependencies: [importedModule]\n        };\n      }\n\n      if (importedModule.buildMeta.providedExports) {\n        return {\n          exports: true,\n          dependencies: undefined\n        };\n      }\n\n      return {\n        exports: null,\n        dependencies: [importedModule]\n      };\n    }\n  }, {\n    key: \"getWarnings\",\n    value: function getWarnings() {\n      if (this.strictExportPresence || this.originModule.buildMeta.strictHarmonyModule) {\n        return [];\n      }\n\n      return this._getErrors();\n    }\n  }, {\n    key: \"getErrors\",\n    value: function getErrors() {\n      if (this.strictExportPresence || this.originModule.buildMeta.strictHarmonyModule) {\n        return this._getErrors();\n      }\n\n      return [];\n    }\n  }, {\n    key: \"_getErrors\",\n    value: function _getErrors() {\n      var importedModule = this._module;\n\n      if (!importedModule) {\n        return;\n      }\n\n      if (!importedModule.buildMeta || !importedModule.buildMeta.exportsType) {\n        // It's not an harmony module\n        if (this.originModule.buildMeta.strictHarmonyModule && this.id !== \"default\") {\n          // In strict harmony modules we only support the default export\n          var exportName = this.id ? \"the named export '\".concat(this.id, \"'\") : \"the namespace object\";\n          return [new HarmonyLinkingError(\"Can't reexport \".concat(exportName, \" from non EcmaScript module (only default export is available)\"))];\n        }\n\n        return;\n      }\n\n      if (!this.id) {\n        return;\n      }\n\n      if (importedModule.isProvided(this.id) !== false) {\n        // It's provided or we are not sure\n        return;\n      } // We are sure that it's not provided\n\n\n      var idIsNotNameMessage = this.id !== this.name ? \" (reexported as '\".concat(this.name, \"')\") : \"\";\n      var errorMessage = \"\\\"export '\".concat(this.id, \"'\").concat(idIsNotNameMessage, \" was not found in '\").concat(this.userRequest, \"'\");\n      return [new HarmonyLinkingError(errorMessage)];\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      _get(_getPrototypeOf(HarmonyExportImportedSpecifierDependency.prototype), \"updateHash\", this).call(this, hash);\n\n      var hashValue = this.getHashValue(this._module);\n      hash.update(hashValue);\n    }\n  }, {\n    key: \"getHashValue\",\n    value: function getHashValue(importedModule) {\n      if (!importedModule) {\n        return \"\";\n      }\n\n      var stringifiedUsedExport = JSON.stringify(importedModule.usedExports);\n      var stringifiedProvidedExport = JSON.stringify(importedModule.buildMeta.providedExports);\n      return importedModule.used + stringifiedUsedExport + stringifiedProvidedExport;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return \"harmony export imported specifier\";\n    }\n  }]);\n\n  return HarmonyExportImportedSpecifierDependency;\n}(HarmonyImportDependency);\n\nmodule.exports = HarmonyExportImportedSpecifierDependency;\n\nHarmonyExportImportedSpecifierDependency.Template =\n/*#__PURE__*/\nfunction (_HarmonyImportDepende2) {\n  _inherits(HarmonyExportImportedSpecifierDependencyTemplate, _HarmonyImportDepende2);\n\n  function HarmonyExportImportedSpecifierDependencyTemplate() {\n    _classCallCheck(this, HarmonyExportImportedSpecifierDependencyTemplate);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HarmonyExportImportedSpecifierDependencyTemplate).apply(this, arguments));\n  }\n\n  _createClass(HarmonyExportImportedSpecifierDependencyTemplate, [{\n    key: \"harmonyInit\",\n    value: function harmonyInit(dep, source, runtime, dependencyTemplates) {\n      _get(_getPrototypeOf(HarmonyExportImportedSpecifierDependencyTemplate.prototype), \"harmonyInit\", this).call(this, dep, source, runtime, dependencyTemplates);\n\n      var content = this.getContent(dep);\n      source.insert(-1, content);\n    }\n  }, {\n    key: \"getHarmonyInitOrder\",\n    value: function getHarmonyInitOrder(dep) {\n      if (dep.name) {\n        var used = dep.originModule.isUsed(dep.name);\n        if (!used) return NaN;\n      } else {\n        var importedModule = dep._module;\n\n        var activeFromOtherStarExports = dep._discoverActiveExportsFromOtherStartExports();\n\n        if (Array.isArray(dep.originModule.usedExports)) {\n          // we know which exports are used\n          var unused = dep.originModule.usedExports.every(function (id) {\n            if (id === \"default\") return true;\n            if (dep.activeExports.has(id)) return true;\n            if (importedModule.isProvided(id) === false) return true;\n            if (activeFromOtherStarExports.has(id)) return true;\n            return false;\n          });\n          if (unused) return NaN;\n        } else if (dep.originModule.usedExports && importedModule && Array.isArray(importedModule.buildMeta.providedExports)) {\n          // not sure which exports are used, but we know which are provided\n          var _unused = importedModule.buildMeta.providedExports.every(function (id) {\n            if (id === \"default\") return true;\n            if (dep.activeExports.has(id)) return true;\n            if (activeFromOtherStarExports.has(id)) return true;\n            return false;\n          });\n\n          if (_unused) return NaN;\n        }\n      }\n\n      return _get(_getPrototypeOf(HarmonyExportImportedSpecifierDependencyTemplate.prototype), \"getHarmonyInitOrder\", this).call(this, dep);\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent(dep) {\n      var _this3 = this;\n\n      var mode = dep.getMode(false);\n      var module = dep.originModule;\n      var importedModule = dep._module;\n      var importVar = dep.getImportVar();\n\n      switch (mode.type) {\n        case \"missing\":\n          return \"throw new Error(\".concat(JSON.stringify(\"Cannot find module '\".concat(mode.userRequest, \"'\")), \");\\n\");\n\n        case \"unused\":\n          return \"\".concat(Template.toNormalComment(\"unused harmony reexport \".concat(mode.name)), \"\\n\");\n\n        case \"reexport-non-harmony-default\":\n          return \"/* harmony reexport (default from non-harmony) */ \" + this.getReexportStatement(module, module.isUsed(mode.name), importVar, null);\n\n        case \"reexport-named-default\":\n          return \"/* harmony reexport (default from named exports) */ \" + this.getReexportStatement(module, module.isUsed(mode.name), importVar, \"\");\n\n        case \"reexport-fake-namespace-object\":\n          return \"/* harmony reexport (fake namespace object from non-harmony) */ \" + this.getReexportFakeNamespaceObjectStatement(module, module.isUsed(mode.name), importVar);\n\n        case \"rexport-non-harmony-undefined\":\n          return \"/* harmony reexport (non default export from non-harmony) */ \" + this.getReexportStatement(module, module.isUsed(mode.name), \"undefined\", \"\");\n\n        case \"reexport-non-harmony-default-strict\":\n          return \"/* harmony reexport (default from non-harmony) */ \" + this.getReexportStatement(module, module.isUsed(mode.name), importVar, \"\");\n\n        case \"reexport-namespace-object\":\n          return \"/* harmony reexport (module object) */ \" + this.getReexportStatement(module, module.isUsed(mode.name), importVar, \"\");\n\n        case \"empty-star\":\n          return \"/* empty/unused harmony star reexport */\";\n\n        case \"safe-reexport\":\n          return Array.from(mode.map.entries()).map(function (item) {\n            return \"/* harmony reexport (safe) */ \" + _this3.getReexportStatement(module, module.isUsed(item[0]), importVar, importedModule.isUsed(item[1])) + \"\\n\";\n          }).join(\"\");\n\n        case \"checked-reexport\":\n          return Array.from(mode.map.entries()).map(function (item) {\n            return \"/* harmony reexport (checked) */ \" + _this3.getConditionalReexportStatement(module, item[0], importVar, item[1]) + \"\\n\";\n          }).join(\"\");\n\n        case \"dynamic-reexport\":\n          {\n            var activeExports = new Set([].concat(_toConsumableArray(dep.activeExports), _toConsumableArray(dep._discoverActiveExportsFromOtherStartExports())));\n            var content = \"/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in \" + importVar + \") \"; // Filter out exports which are defined by other exports\n            // and filter out default export because it cannot be reexported with *\n\n            if (activeExports.size > 0) {\n              content += \"if(\" + JSON.stringify(Array.from(activeExports).concat(\"default\")) + \".indexOf(__WEBPACK_IMPORT_KEY__) < 0) \";\n            } else {\n              content += \"if(__WEBPACK_IMPORT_KEY__ !== 'default') \";\n            }\n\n            var exportsName = dep.originModule.exportsArgument;\n            return content + \"(function(key) { __webpack_require__.d(\".concat(exportsName, \", key, function() { return \").concat(importVar, \"[key]; }) }(__WEBPACK_IMPORT_KEY__));\\n\");\n          }\n\n        default:\n          throw new Error(\"Unknown mode \".concat(mode.type));\n      }\n    }\n  }, {\n    key: \"getReexportStatement\",\n    value: function getReexportStatement(module, key, name, valueKey) {\n      var exportsName = module.exportsArgument;\n      var returnValue = this.getReturnValue(name, valueKey);\n      return \"__webpack_require__.d(\".concat(exportsName, \", \").concat(JSON.stringify(key), \", function() { return \").concat(returnValue, \"; });\\n\");\n    }\n  }, {\n    key: \"getReexportFakeNamespaceObjectStatement\",\n    value: function getReexportFakeNamespaceObjectStatement(module, key, name) {\n      var exportsName = module.exportsArgument;\n      return \"__webpack_require__.d(\".concat(exportsName, \", \").concat(JSON.stringify(key), \", function() { return __webpack_require__.t(\").concat(name, \"); });\\n\");\n    }\n  }, {\n    key: \"getConditionalReexportStatement\",\n    value: function getConditionalReexportStatement(module, key, name, valueKey) {\n      if (valueKey === false) {\n        return \"/* unused export */\\n\";\n      }\n\n      var exportsName = module.exportsArgument;\n      var returnValue = this.getReturnValue(name, valueKey);\n      return \"if(__webpack_require__.o(\".concat(name, \", \").concat(JSON.stringify(valueKey), \")) __webpack_require__.d(\").concat(exportsName, \", \").concat(JSON.stringify(key), \", function() { return \").concat(returnValue, \"; });\\n\");\n    }\n  }, {\n    key: \"getReturnValue\",\n    value: function getReturnValue(name, valueKey) {\n      if (valueKey === null) {\n        return \"\".concat(name, \"_default.a\");\n      }\n\n      if (valueKey === \"\") {\n        return name;\n      }\n\n      if (valueKey === false) {\n        return \"/* unused export */ undefined\";\n      }\n\n      return \"\".concat(name, \"[\").concat(JSON.stringify(valueKey), \"]\");\n    }\n  }]);\n\n  return HarmonyExportImportedSpecifierDependencyTemplate;\n}(HarmonyImportDependency.Template);","map":null,"metadata":{},"sourceType":"script"}