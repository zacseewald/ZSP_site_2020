{"ast":null,"code":"// the parent class for all fstreams.\nmodule.exports = Abstract;\n\nvar Stream = require('stream').Stream;\n\nvar inherits = require('inherits');\n\nfunction Abstract() {\n  Stream.call(this);\n}\n\ninherits(Abstract, Stream);\n\nAbstract.prototype.on = function (ev, fn) {\n  if (ev === 'ready' && this.ready) {\n    process.nextTick(fn.bind(this));\n  } else {\n    Stream.prototype.on.call(this, ev, fn);\n  }\n\n  return this;\n};\n\nAbstract.prototype.abort = function () {\n  this._aborted = true;\n  this.emit('abort');\n};\n\nAbstract.prototype.destroy = function () {};\n\nAbstract.prototype.warn = function (msg, code) {\n  var self = this;\n  var er = decorate(msg, code, self);\n\n  if (!self.listeners('warn')) {\n    console.error('%s %s\\n' + 'path = %s\\n' + 'syscall = %s\\n' + 'fstream_type = %s\\n' + 'fstream_path = %s\\n' + 'fstream_unc_path = %s\\n' + 'fstream_class = %s\\n' + 'fstream_stack =\\n%s\\n', code || 'UNKNOWN', er.stack, er.path, er.syscall, er.fstream_type, er.fstream_path, er.fstream_unc_path, er.fstream_class, er.fstream_stack.join('\\n'));\n  } else {\n    self.emit('warn', er);\n  }\n};\n\nAbstract.prototype.info = function (msg, code) {\n  this.emit('info', msg, code);\n};\n\nAbstract.prototype.error = function (msg, code, th) {\n  var er = decorate(msg, code, this);\n  if (th) throw er;else this.emit('error', er);\n};\n\nfunction decorate(er, code, self) {\n  if (!(er instanceof Error)) er = new Error(er);\n  er.code = er.code || code;\n  er.path = er.path || self.path;\n  er.fstream_type = er.fstream_type || self.type;\n  er.fstream_path = er.fstream_path || self.path;\n\n  if (self._path !== self.path) {\n    er.fstream_unc_path = er.fstream_unc_path || self._path;\n  }\n\n  if (self.linkpath) {\n    er.fstream_linkpath = er.fstream_linkpath || self.linkpath;\n  }\n\n  er.fstream_class = er.fstream_class || self.constructor.name;\n  er.fstream_stack = er.fstream_stack || new Error().stack.split(/\\n/).slice(3).map(function (s) {\n    return s.replace(/^ {4}at /, '');\n  });\n  return er;\n}","map":null,"metadata":{},"sourceType":"script"}