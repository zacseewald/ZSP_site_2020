{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require(\"webpack-sources\"),\n    ConcatSource = _require.ConcatSource,\n    RawSource = _require.RawSource;\n\nvar stringifySafe = function stringifySafe(data) {\n  var stringified = JSON.stringify(data);\n\n  if (!stringified) {\n    return undefined; // Invalid JSON\n  }\n\n  return stringified.replace(/\\u2028|\\u2029/g, function (str) {\n    return str === \"\\u2029\" ? \"\\\\u2029\" : \"\\\\u2028\";\n  }); // invalid in JavaScript but valid JSON\n};\n\nvar JsonGenerator =\n/*#__PURE__*/\nfunction () {\n  function JsonGenerator() {\n    _classCallCheck(this, JsonGenerator);\n  }\n\n  _createClass(JsonGenerator, [{\n    key: \"generate\",\n    value: function generate(module, dependencyTemplates, runtimeTemplate) {\n      var source = new ConcatSource();\n      var data = module.buildInfo.jsonData;\n\n      if (data === undefined) {\n        return new RawSource(runtimeTemplate.missingModuleStatement({\n          request: module.rawRequest\n        }));\n      }\n\n      if (Array.isArray(module.buildMeta.providedExports) && !module.isUsed(\"default\")) {\n        // Only some exports are used: We can optimize here, by only generating a part of the JSON\n        var reducedJson = {};\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = module.buildMeta.providedExports[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var exportName = _step.value;\n            if (exportName === \"default\") continue;\n            var used = module.isUsed(exportName);\n\n            if (used) {\n              reducedJson[used] = data[exportName];\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        source.add(\"\".concat(module.moduleArgument, \".exports = \").concat(stringifySafe(reducedJson), \";\"));\n      } else {\n        source.add(\"\".concat(module.moduleArgument, \".exports = \").concat(stringifySafe(data), \";\"));\n      }\n\n      return source;\n    }\n  }]);\n\n  return JsonGenerator;\n}();\n\nmodule.exports = JsonGenerator;","map":null,"metadata":{},"sourceType":"script"}