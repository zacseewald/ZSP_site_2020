{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar NamedChunksPlugin =\n/*#__PURE__*/\nfunction () {\n  _createClass(NamedChunksPlugin, null, [{\n    key: \"defaultNameResolver\",\n    value: function defaultNameResolver(chunk) {\n      return chunk.name || null;\n    }\n  }]);\n\n  function NamedChunksPlugin(nameResolver) {\n    _classCallCheck(this, NamedChunksPlugin);\n\n    this.nameResolver = nameResolver || NamedChunksPlugin.defaultNameResolver;\n  }\n\n  _createClass(NamedChunksPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"NamedChunksPlugin\", function (compilation) {\n        compilation.hooks.beforeChunkIds.tap(\"NamedChunksPlugin\", function (chunks) {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = chunks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var chunk = _step.value;\n\n              if (chunk.id === null) {\n                chunk.id = _this.nameResolver(chunk);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        });\n      });\n    }\n  }]);\n\n  return NamedChunksPlugin;\n}();\n\nmodule.exports = NamedChunksPlugin;","map":null,"metadata":{},"sourceType":"script"}