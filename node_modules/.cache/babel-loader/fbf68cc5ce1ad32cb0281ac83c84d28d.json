{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\n\nvar PrefetchPlugin =\n/*#__PURE__*/\nfunction () {\n  function PrefetchPlugin(context, request) {\n    _classCallCheck(this, PrefetchPlugin);\n\n    if (!request) {\n      this.request = context;\n    } else {\n      this.context = context;\n      this.request = request;\n    }\n  }\n\n  _createClass(PrefetchPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"PrefetchPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(PrefetchDependency, normalModuleFactory);\n      });\n      compiler.hooks.make.tapAsync(\"PrefetchPlugin\", function (compilation, callback) {\n        compilation.prefetch(_this.context || compiler.context, new PrefetchDependency(_this.request), callback);\n      });\n    }\n  }]);\n\n  return PrefetchPlugin;\n}();\n\nmodule.exports = PrefetchPlugin;","map":null,"metadata":{},"sourceType":"script"}