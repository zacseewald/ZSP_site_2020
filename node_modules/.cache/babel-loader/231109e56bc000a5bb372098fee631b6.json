{"ast":null,"code":"// just like the Entry class, but it buffers the contents\n//\n// XXX It would be good to set a maximum BufferEntry filesize,\n// since it eats up memory.  In normal operation,\n// these are only for long filenames or link names, which are\n// rarely very big.\nmodule.exports = BufferEntry;\n\nvar inherits = require(\"inherits\"),\n    Entry = require(\"./entry.js\");\n\nfunction BufferEntry() {\n  Entry.apply(this, arguments);\n  this._buffer = new Buffer(this.props.size);\n  this._offset = 0;\n  this.body = \"\";\n  this.on(\"end\", function () {\n    this.body = this._buffer.toString().slice(0, -1);\n  });\n}\n\ninherits(BufferEntry, Entry); // collect the bytes as they come in.\n\nBufferEntry.prototype.write = function (c) {\n  c.copy(this._buffer, this._offset);\n  this._offset += c.length;\n  Entry.prototype.write.call(this, c);\n};","map":null,"metadata":{},"sourceType":"script"}