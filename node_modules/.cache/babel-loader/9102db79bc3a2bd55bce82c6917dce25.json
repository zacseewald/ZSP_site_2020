{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _assertThisInitialized = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar WebpackError = require(\"./WebpackError\");\n/** @typedef {import(\"./Module\")} Module */\n\n/**\n * @param {Module[]} modules the modules to be sorted\n * @returns {Module[]} sorted version of original modules\n */\n\n\nvar sortModules = function sortModules(modules) {\n  return modules.slice().sort(function (a, b) {\n    var aIdent = a.identifier();\n    var bIdent = b.identifier();\n    /* istanbul ignore next */\n\n    if (aIdent < bIdent) return -1;\n    /* istanbul ignore next */\n\n    if (aIdent > bIdent) return 1;\n    /* istanbul ignore next */\n\n    return 0;\n  });\n};\n/**\n * @param {Module[]} modules each module from throw\n * @returns {string} each message from provided moduels\n */\n\n\nvar createModulesListMessage = function createModulesListMessage(modules) {\n  return modules.map(function (m) {\n    var message = \"* \".concat(m.identifier());\n    var validReasons = m.reasons.filter(function (reason) {\n      return reason.module;\n    });\n\n    if (validReasons.length > 0) {\n      message += \"\\n    Used by \".concat(validReasons.length, \" module(s), i. e.\");\n      message += \"\\n    \".concat(validReasons[0].module.identifier());\n    }\n\n    return message;\n  }).join(\"\\n\");\n};\n\nvar CaseSensitiveModulesWarning =\n/*#__PURE__*/\nfunction (_WebpackError) {\n  _inherits(CaseSensitiveModulesWarning, _WebpackError);\n\n  /**\n   * Creates an instance of CaseSensitiveModulesWarning.\n   * @param {Module[]} modules modules that were detected\n   */\n  function CaseSensitiveModulesWarning(modules) {\n    var _this;\n\n    _classCallCheck(this, CaseSensitiveModulesWarning);\n\n    var sortedModules = sortModules(modules);\n    var modulesList = createModulesListMessage(sortedModules);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CaseSensitiveModulesWarning).call(this, \"There are multiple modules with names that only differ in casing.\\nThis can lead to unexpected behavior when compiling on a filesystem with other case-semantic.\\nUse equal casing. Compare these module identifiers:\\n\".concat(modulesList)));\n    _this.name = \"CaseSensitiveModulesWarning\";\n    _this.origin = _this.module = sortedModules[0];\n    Error.captureStackTrace(_assertThisInitialized(_assertThisInitialized(_this)), _this.constructor);\n    return _this;\n  }\n\n  return CaseSensitiveModulesWarning;\n}(WebpackError);\n\nmodule.exports = CaseSensitiveModulesWarning;","map":null,"metadata":{},"sourceType":"script"}