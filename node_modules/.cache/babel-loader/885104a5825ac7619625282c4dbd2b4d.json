{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./SingleEntryDependency\")} SingleEntryDependency */\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/inherits\");\n\nvar Dependency = require(\"../Dependency\");\n\nvar MultiEntryDependency =\n/*#__PURE__*/\nfunction (_Dependency) {\n  _inherits(MultiEntryDependency, _Dependency);\n\n  /**\n   * @param {SingleEntryDependency[]} dependencies an array of SingleEntryDependencies\n   * @param {string} name entry name\n   */\n  function MultiEntryDependency(dependencies, name) {\n    var _this;\n\n    _classCallCheck(this, MultiEntryDependency);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiEntryDependency).call(this));\n    _this.dependencies = dependencies;\n    _this.name = name;\n    return _this;\n  }\n\n  _createClass(MultiEntryDependency, [{\n    key: \"type\",\n    get: function get() {\n      return \"multi entry\";\n    }\n  }]);\n\n  return MultiEntryDependency;\n}(Dependency);\n\nmodule.exports = MultiEntryDependency;","map":null,"metadata":{},"sourceType":"script"}