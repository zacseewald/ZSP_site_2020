{"ast":null,"code":"// A reader for when we don't yet know what kind of thing\n// the thing is.\nmodule.exports = ProxyReader;\n\nvar Reader = require('./reader.js');\n\nvar getType = require('./get-type.js');\n\nvar inherits = require('inherits');\n\nvar fs = require('graceful-fs');\n\ninherits(ProxyReader, Reader);\n\nfunction ProxyReader(props) {\n  var self = this;\n\n  if (!(self instanceof ProxyReader)) {\n    throw new Error('ProxyReader must be called as constructor.');\n  }\n\n  self.props = props;\n  self._buffer = [];\n  self.ready = false;\n  Reader.call(self, props);\n}\n\nProxyReader.prototype._stat = function () {\n  var self = this;\n  var props = self.props; // stat the thing to see what the proxy should be.\n\n  var stat = props.follow ? 'stat' : 'lstat';\n  fs[stat](props.path, function (er, current) {\n    var type;\n\n    if (er || !current) {\n      type = 'File';\n    } else {\n      type = getType(current);\n    }\n\n    props[type] = true;\n    props.type = self.type = type;\n    self._old = current;\n\n    self._addProxy(Reader(props, current));\n  });\n};\n\nProxyReader.prototype._addProxy = function (proxy) {\n  var self = this;\n\n  if (self._proxyTarget) {\n    return self.error('proxy already set');\n  }\n\n  self._proxyTarget = proxy;\n  proxy._proxy = self;\n  ['error', 'data', 'end', 'close', 'linkpath', 'entry', 'entryEnd', 'child', 'childEnd', 'warn', 'stat'].forEach(function (ev) {\n    // console.error('~~ proxy event', ev, self.path)\n    proxy.on(ev, self.emit.bind(self, ev));\n  });\n  self.emit('proxy', proxy);\n  proxy.on('ready', function () {\n    // console.error(\"~~ proxy is ready!\", self.path)\n    self.ready = true;\n    self.emit('ready');\n  });\n  var calls = self._buffer;\n  self._buffer.length = 0;\n  calls.forEach(function (c) {\n    proxy[c[0]].apply(proxy, c[1]);\n  });\n};\n\nProxyReader.prototype.pause = function () {\n  return this._proxyTarget ? this._proxyTarget.pause() : false;\n};\n\nProxyReader.prototype.resume = function () {\n  return this._proxyTarget ? this._proxyTarget.resume() : false;\n};","map":null,"metadata":{},"sourceType":"script"}