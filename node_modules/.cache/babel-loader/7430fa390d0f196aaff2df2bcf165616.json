{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar FlagInitialModulesAsUsedPlugin =\n/*#__PURE__*/\nfunction () {\n  function FlagInitialModulesAsUsedPlugin(explanation) {\n    _classCallCheck(this, FlagInitialModulesAsUsedPlugin);\n\n    this.explanation = explanation;\n  }\n\n  _createClass(FlagInitialModulesAsUsedPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n\n      compiler.hooks.compilation.tap(\"FlagInitialModulesAsUsedPlugin\", function (compilation) {\n        compilation.hooks.afterOptimizeChunks.tap(\"FlagInitialModulesAsUsedPlugin\", function (chunks) {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = chunks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var chunk = _step.value;\n\n              if (!chunk.isOnlyInitial()) {\n                return;\n              }\n\n              var _iteratorNormalCompletion2 = true;\n              var _didIteratorError2 = false;\n              var _iteratorError2 = undefined;\n\n              try {\n                for (var _iterator2 = chunk.modulesIterable[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                  var _module = _step2.value;\n                  _module.used = true;\n                  _module.usedExports = true;\n\n                  _module.addReason(null, null, _this.explanation);\n                }\n              } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                    _iterator2.return();\n                  }\n                } finally {\n                  if (_didIteratorError2) {\n                    throw _iteratorError2;\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        });\n      });\n    }\n  }]);\n\n  return FlagInitialModulesAsUsedPlugin;\n}();\n\nmodule.exports = FlagInitialModulesAsUsedPlugin;","map":null,"metadata":{},"sourceType":"script"}