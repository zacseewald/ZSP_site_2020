{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/inherits\");\n\nvar DependencyReference = require(\"./DependencyReference\");\n\nvar ModuleDependency = require(\"./ModuleDependency\");\n\nvar Template = require(\"../Template\");\n\nvar RequireIncludeDependency =\n/*#__PURE__*/\nfunction (_ModuleDependency) {\n  _inherits(RequireIncludeDependency, _ModuleDependency);\n\n  function RequireIncludeDependency(request, range) {\n    var _this;\n\n    _classCallCheck(this, RequireIncludeDependency);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RequireIncludeDependency).call(this, request));\n    _this.range = range;\n    return _this;\n  }\n\n  _createClass(RequireIncludeDependency, [{\n    key: \"getReference\",\n    value: function getReference() {\n      if (!this.module) return null; // This doesn't use any export\n\n      return new DependencyReference(this.module, [], false);\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return \"require.include\";\n    }\n  }]);\n\n  return RequireIncludeDependency;\n}(ModuleDependency);\n\nRequireIncludeDependency.Template =\n/*#__PURE__*/\nfunction () {\n  function RequireIncludeDependencyTemplate() {\n    _classCallCheck(this, RequireIncludeDependencyTemplate);\n  }\n\n  _createClass(RequireIncludeDependencyTemplate, [{\n    key: \"apply\",\n    value: function apply(dep, source, runtime) {\n      var comment = runtime.outputOptions.pathinfo ? Template.toComment(\"require.include \".concat(runtime.requestShortener.shorten(dep.request))) : \"\";\n      source.replace(dep.range[0], dep.range[1] - 1, \"undefined\".concat(comment));\n    }\n  }]);\n\n  return RequireIncludeDependencyTemplate;\n}();\n\nmodule.exports = RequireIncludeDependency;","map":null,"metadata":{},"sourceType":"script"}