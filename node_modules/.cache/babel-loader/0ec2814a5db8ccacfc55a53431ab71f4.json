{"ast":null,"code":"var log = require('npmlog'),\n    execFile = require('child_process').execFile,\n    path = require('path');\n\nfunction findVS2017(callback) {\n  var ps = path.join(process.env.SystemRoot, 'System32', 'WindowsPowerShell', 'v1.0', 'powershell.exe');\n  var csFile = path.join(__dirname, 'Find-VS2017.cs');\n  var psArgs = ['-ExecutionPolicy', 'Unrestricted', '-NoProfile', '-Command', '&{Add-Type -Path \\'' + csFile + '\\';' + '[VisualStudioConfiguration.Main]::Query()}'];\n  log.silly('find vs2017', 'Running', ps, psArgs);\n  var child = execFile(ps, psArgs, {\n    encoding: 'utf8'\n  }, function (err, stdout, stderr) {\n    log.silly('find vs2017', 'PS err:', err);\n    log.silly('find vs2017', 'PS stdout:', stdout);\n    log.silly('find vs2017', 'PS stderr:', stderr);\n    if (err) return callback(new Error('Could not use PowerShell to find VS2017'));\n    var vsSetup;\n\n    try {\n      vsSetup = JSON.parse(stdout);\n    } catch (e) {\n      log.silly('find vs2017', e);\n      return callback(new Error('Could not use PowerShell to find VS2017'));\n    }\n\n    log.silly('find vs2017', 'vsSetup:', vsSetup);\n    if (vsSetup && vsSetup.log) log.verbose('find vs2017', vsSetup.log.trimRight());\n\n    if (!vsSetup || !vsSetup.path || !vsSetup.sdk) {\n      return callback(new Error('No usable installation of VS2017 found'));\n    }\n\n    log.verbose('find vs2017', 'using installation:', vsSetup.path);\n    callback(null, {\n      \"path\": vsSetup.path,\n      \"sdk\": vsSetup.sdk\n    });\n  });\n  child.stdin.end();\n}\n\nmodule.exports = findVS2017;","map":null,"metadata":{},"sourceType":"script"}