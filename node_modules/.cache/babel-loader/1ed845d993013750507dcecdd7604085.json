{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar path = require(\"path\");\n\nvar NormalModuleReplacementPlugin =\n/*#__PURE__*/\nfunction () {\n  function NormalModuleReplacementPlugin(resourceRegExp, newResource) {\n    _classCallCheck(this, NormalModuleReplacementPlugin);\n\n    this.resourceRegExp = resourceRegExp;\n    this.newResource = newResource;\n  }\n\n  _createClass(NormalModuleReplacementPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var resourceRegExp = this.resourceRegExp;\n      var newResource = this.newResource;\n      compiler.hooks.normalModuleFactory.tap(\"NormalModuleReplacementPlugin\", function (nmf) {\n        nmf.hooks.beforeResolve.tap(\"NormalModuleReplacementPlugin\", function (result) {\n          if (!result) return;\n\n          if (resourceRegExp.test(result.request)) {\n            if (typeof newResource === \"function\") {\n              newResource(result);\n            } else {\n              result.request = newResource;\n            }\n          }\n\n          return result;\n        });\n        nmf.hooks.afterResolve.tap(\"NormalModuleReplacementPlugin\", function (result) {\n          if (!result) return;\n\n          if (resourceRegExp.test(result.resource)) {\n            if (typeof newResource === \"function\") {\n              newResource(result);\n            } else {\n              result.resource = path.resolve(path.dirname(result.resource), newResource);\n            }\n          }\n\n          return result;\n        });\n      });\n    }\n  }]);\n\n  return NormalModuleReplacementPlugin;\n}();\n\nmodule.exports = NormalModuleReplacementPlugin;","map":null,"metadata":{},"sourceType":"script"}