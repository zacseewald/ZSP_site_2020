{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar path = require(\"path\");\n\nvar NORMALIZE_SLASH_DIRECTION_REGEXP = /\\\\/g;\nvar PATH_CHARS_REGEXP = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nvar SEPARATOR_REGEXP = /[/\\\\]$/;\nvar FRONT_OR_BACK_BANG_REGEXP = /^!|!$/g;\nvar INDEX_JS_REGEXP = /\\/index.js(!|\\?|\\(query\\))/g;\nvar MATCH_RESOURCE_REGEXP = /!=!/;\n\nvar normalizeBackSlashDirection = function normalizeBackSlashDirection(request) {\n  return request.replace(NORMALIZE_SLASH_DIRECTION_REGEXP, \"/\");\n};\n\nvar createRegExpForPath = function createRegExpForPath(path) {\n  var regexpTypePartial = path.replace(PATH_CHARS_REGEXP, \"\\\\$&\");\n  return new RegExp(\"(^|!)\".concat(regexpTypePartial), \"g\");\n};\n\nvar RequestShortener =\n/*#__PURE__*/\nfunction () {\n  function RequestShortener(directory) {\n    _classCallCheck(this, RequestShortener);\n\n    directory = normalizeBackSlashDirection(directory);\n\n    if (SEPARATOR_REGEXP.test(directory)) {\n      directory = directory.substr(0, directory.length - 1);\n    }\n\n    if (directory) {\n      this.currentDirectoryRegExp = createRegExpForPath(directory);\n    }\n\n    var dirname = path.dirname(directory);\n    var endsWithSeparator = SEPARATOR_REGEXP.test(dirname);\n    var parentDirectory = endsWithSeparator ? dirname.substr(0, dirname.length - 1) : dirname;\n\n    if (parentDirectory && parentDirectory !== directory) {\n      this.parentDirectoryRegExp = createRegExpForPath(parentDirectory);\n    }\n\n    if (__dirname.length >= 2) {\n      var buildins = normalizeBackSlashDirection(path.join(__dirname, \"..\"));\n      var buildinsAsModule = this.currentDirectoryRegExp && this.currentDirectoryRegExp.test(buildins);\n      this.buildinsAsModule = buildinsAsModule;\n      this.buildinsRegExp = createRegExpForPath(buildins);\n    }\n\n    this.cache = new Map();\n  }\n\n  _createClass(RequestShortener, [{\n    key: \"shorten\",\n    value: function shorten(request) {\n      if (!request) return request;\n      var cacheEntry = this.cache.get(request);\n\n      if (cacheEntry !== undefined) {\n        return cacheEntry;\n      }\n\n      var result = normalizeBackSlashDirection(request);\n\n      if (this.buildinsAsModule && this.buildinsRegExp) {\n        result = result.replace(this.buildinsRegExp, \"!(webpack)\");\n      }\n\n      if (this.currentDirectoryRegExp) {\n        result = result.replace(this.currentDirectoryRegExp, \"!.\");\n      }\n\n      if (this.parentDirectoryRegExp) {\n        result = result.replace(this.parentDirectoryRegExp, \"!..\");\n      }\n\n      if (!this.buildinsAsModule && this.buildinsRegExp) {\n        result = result.replace(this.buildinsRegExp, \"!(webpack)\");\n      }\n\n      result = result.replace(INDEX_JS_REGEXP, \"$1\");\n      result = result.replace(FRONT_OR_BACK_BANG_REGEXP, \"\");\n      result = result.replace(MATCH_RESOURCE_REGEXP, \" = \");\n      this.cache.set(request, result);\n      return result;\n    }\n  }]);\n\n  return RequestShortener;\n}();\n\nmodule.exports = RequestShortener;","map":null,"metadata":{},"sourceType":"script"}