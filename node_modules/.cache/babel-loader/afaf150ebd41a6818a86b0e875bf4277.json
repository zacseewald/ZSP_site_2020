{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nvar UseStrictPlugin =\n/*#__PURE__*/\nfunction () {\n  function UseStrictPlugin() {\n    _classCallCheck(this, UseStrictPlugin);\n  }\n\n  _createClass(UseStrictPlugin, [{\n    key: \"apply\",\n\n    /**\n     * @param {Compiler} compiler Webpack Compiler\n     * @returns {void}\n     */\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"UseStrictPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n\n        var handler = function handler(parser) {\n          parser.hooks.program.tap(\"UseStrictPlugin\", function (ast) {\n            var firstNode = ast.body[0];\n\n            if (firstNode && firstNode.type === \"ExpressionStatement\" && firstNode.expression.type === \"Literal\" && firstNode.expression.value === \"use strict\") {\n              // Remove \"use strict\" expression. It will be added later by the renderer again.\n              // This is necessary in order to not break the strict mode when webpack prepends code.\n              // @see https://github.com/webpack/webpack/issues/1970\n              var dep = new ConstDependency(\"\", firstNode.range);\n              dep.loc = firstNode.loc;\n              parser.state.current.addDependency(dep);\n              parser.state.module.buildInfo.strict = true;\n            }\n          });\n        };\n\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"UseStrictPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"UseStrictPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"UseStrictPlugin\", handler);\n      });\n    }\n  }]);\n\n  return UseStrictPlugin;\n}();\n\nmodule.exports = UseStrictPlugin;","map":null,"metadata":{},"sourceType":"script"}