{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/inherits\");\n\nvar Source = require(\"./Source\");\n\nvar CachedSource =\n/*#__PURE__*/\nfunction (_Source) {\n  _inherits(CachedSource, _Source);\n\n  function CachedSource(source) {\n    var _this;\n\n    _classCallCheck(this, CachedSource);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CachedSource).call(this));\n    _this._source = source;\n    _this._cachedSource = undefined;\n    _this._cachedSize = undefined;\n    _this._cachedMaps = {};\n    if (source.node) _this.node = function (options) {\n      return this._source.node(options);\n    };\n    if (source.listMap) _this.listMap = function (options) {\n      return this._source.listMap(options);\n    };\n    return _this;\n  }\n\n  _createClass(CachedSource, [{\n    key: \"source\",\n    value: function source() {\n      if (typeof this._cachedSource !== \"undefined\") return this._cachedSource;\n      return this._cachedSource = this._source.source();\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      if (typeof this._cachedSize !== \"undefined\") return this._cachedSize;\n      if (typeof this._cachedSource !== \"undefined\") return this._cachedSize = this._cachedSource.length;\n      return this._cachedSize = this._source.size();\n    }\n  }, {\n    key: \"sourceAndMap\",\n    value: function sourceAndMap(options) {\n      var key = JSON.stringify(options);\n      if (typeof this._cachedSource !== \"undefined\" && key in this._cachedMaps) return {\n        source: this._cachedSource,\n        map: this._cachedMaps[key]\n      };else if (typeof this._cachedSource !== \"undefined\") {\n        return {\n          source: this._cachedSource,\n          map: this._cachedMaps[key] = this._source.map(options)\n        };\n      } else if (key in this._cachedMaps) {\n        return {\n          source: this._cachedSource = this._source.source(),\n          map: this._cachedMaps[key]\n        };\n      }\n\n      var result = this._source.sourceAndMap(options);\n\n      this._cachedSource = result.source;\n      this._cachedMaps[key] = result.map;\n      return {\n        source: this._cachedSource,\n        map: this._cachedMaps[key]\n      };\n    }\n  }, {\n    key: \"map\",\n    value: function map(options) {\n      if (!options) options = {};\n      var key = JSON.stringify(options);\n      if (key in this._cachedMaps) return this._cachedMaps[key];\n      return this._cachedMaps[key] = this._source.map();\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      this._source.updateHash(hash);\n    }\n  }]);\n\n  return CachedSource;\n}(Source);\n\nmodule.exports = CachedSource;","map":null,"metadata":{},"sourceType":"script"}