{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _require = require(\"webpack-sources\"),\n    OriginalSource = _require.OriginalSource,\n    RawSource = _require.RawSource;\n\nvar Module = require(\"./Module\");\n\nvar WebpackMissingModule = require(\"./dependencies/WebpackMissingModule\");\n\nvar DelegatedSourceDependency = require(\"./dependencies/DelegatedSourceDependency\");\n\nvar DelegatedExportsDependency = require(\"./dependencies/DelegatedExportsDependency\");\n/** @typedef {import(\"./dependencies/ModuleDependency\")} ModuleDependency */\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\n\nvar DelegatedModule =\n/*#__PURE__*/\nfunction (_Module) {\n  _inherits(DelegatedModule, _Module);\n\n  function DelegatedModule(sourceRequest, data, type, userRequest, originalRequest) {\n    var _this;\n\n    _classCallCheck(this, DelegatedModule);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DelegatedModule).call(this, \"javascript/dynamic\", null)); // Info from Factory\n\n    _this.sourceRequest = sourceRequest;\n    _this.request = data.id;\n    _this.type = type;\n    _this.userRequest = userRequest;\n    _this.originalRequest = originalRequest;\n    _this.delegateData = data; // Build info\n\n    _this.delegatedSourceDependency = undefined;\n    return _this;\n  }\n\n  _createClass(DelegatedModule, [{\n    key: \"libIdent\",\n    value: function libIdent(options) {\n      return typeof this.originalRequest === \"string\" ? this.originalRequest : this.originalRequest.libIdent(options);\n    }\n  }, {\n    key: \"identifier\",\n    value: function identifier() {\n      return \"delegated \".concat(JSON.stringify(this.request), \" from \").concat(this.sourceRequest);\n    }\n  }, {\n    key: \"readableIdentifier\",\n    value: function readableIdentifier() {\n      return \"delegated \".concat(this.userRequest, \" from \").concat(this.sourceRequest);\n    }\n  }, {\n    key: \"needRebuild\",\n    value: function needRebuild() {\n      return false;\n    }\n  }, {\n    key: \"build\",\n    value: function build(options, compilation, resolver, fs, callback) {\n      this.built = true;\n      this.buildMeta = Object.assign({}, this.delegateData.buildMeta);\n      this.buildInfo = {};\n      this.delegatedSourceDependency = new DelegatedSourceDependency(this.sourceRequest);\n      this.addDependency(this.delegatedSourceDependency);\n      this.addDependency(new DelegatedExportsDependency(this, this.delegateData.exports || true));\n      callback();\n    }\n  }, {\n    key: \"source\",\n    value: function source(depTemplates, runtime) {\n      var dep =\n      /** @type {DelegatedSourceDependency} */\n      this.dependencies[0];\n      var sourceModule = dep.module;\n      var str;\n\n      if (!sourceModule) {\n        str = WebpackMissingModule.moduleCode(this.sourceRequest);\n      } else {\n        str = \"module.exports = (\".concat(runtime.moduleExports({\n          module: sourceModule,\n          request: dep.request\n        }), \")\");\n\n        switch (this.type) {\n          case \"require\":\n            str += \"(\".concat(JSON.stringify(this.request), \")\");\n            break;\n\n          case \"object\":\n            str += \"[\".concat(JSON.stringify(this.request), \"]\");\n            break;\n        }\n\n        str += \";\";\n      }\n\n      if (this.useSourceMap) {\n        return new OriginalSource(str, this.identifier());\n      } else {\n        return new RawSource(str);\n      }\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return 42;\n    }\n    /**\n     * @param {Hash} hash the hash used to track dependencies\n     * @returns {void}\n     */\n\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      hash.update(this.type);\n      hash.update(JSON.stringify(this.request));\n\n      _get(_getPrototypeOf(DelegatedModule.prototype), \"updateHash\", this).call(this, hash);\n    }\n  }]);\n\n  return DelegatedModule;\n}(Module);\n\nmodule.exports = DelegatedModule;","map":null,"metadata":{},"sourceType":"script"}