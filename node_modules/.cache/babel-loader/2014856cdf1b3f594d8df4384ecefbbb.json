{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar ImportDependency = require(\"./ImportDependency\");\n\nvar ImportEagerDependency = require(\"./ImportEagerDependency\");\n\nvar ImportWeakDependency = require(\"./ImportWeakDependency\");\n\nvar ImportContextDependency = require(\"./ImportContextDependency\");\n\nvar ImportParserPlugin = require(\"./ImportParserPlugin\");\n\nvar ImportPlugin =\n/*#__PURE__*/\nfunction () {\n  function ImportPlugin(options) {\n    _classCallCheck(this, ImportPlugin);\n\n    this.options = options;\n  }\n\n  _createClass(ImportPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var options = this.options;\n      compiler.hooks.compilation.tap(\"ImportPlugin\", function (compilation, _ref) {\n        var contextModuleFactory = _ref.contextModuleFactory,\n            normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(ImportDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(ImportDependency, new ImportDependency.Template());\n        compilation.dependencyFactories.set(ImportEagerDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(ImportEagerDependency, new ImportEagerDependency.Template());\n        compilation.dependencyFactories.set(ImportWeakDependency, normalModuleFactory);\n        compilation.dependencyTemplates.set(ImportWeakDependency, new ImportWeakDependency.Template());\n        compilation.dependencyFactories.set(ImportContextDependency, contextModuleFactory);\n        compilation.dependencyTemplates.set(ImportContextDependency, new ImportContextDependency.Template());\n\n        var handler = function handler(parser, parserOptions) {\n          if (parserOptions.import !== undefined && !parserOptions.import) return;\n          new ImportParserPlugin(options).apply(parser);\n        };\n\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ImportPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"ImportPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ImportPlugin\", handler);\n      });\n    }\n  }]);\n\n  return ImportPlugin;\n}();\n\nmodule.exports = ImportPlugin;","map":null,"metadata":{},"sourceType":"script"}