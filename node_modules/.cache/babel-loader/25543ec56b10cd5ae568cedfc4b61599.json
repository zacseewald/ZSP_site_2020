{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/inherits\");\n\nvar Dependency = require(\"../Dependency\");\n\nvar CriticalDependencyWarning = require(\"./CriticalDependencyWarning\");\n\nvar regExpToString = function regExpToString(r) {\n  return r ? r + \"\" : \"\";\n};\n\nvar ContextDependency =\n/*#__PURE__*/\nfunction (_Dependency) {\n  _inherits(ContextDependency, _Dependency);\n\n  // options: { request, recursive, regExp, include, exclude, mode, chunkName, groupOptions }\n  function ContextDependency(options) {\n    var _this;\n\n    _classCallCheck(this, ContextDependency);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContextDependency).call(this));\n    _this.options = options;\n    _this.userRequest = _this.options.request;\n    /** @type {false | string} */\n\n    _this.critical = false;\n    _this.hadGlobalOrStickyRegExp = false;\n\n    if (_this.options.regExp.global || _this.options.regExp.sticky) {\n      _this.options.regExp = null;\n      _this.hadGlobalOrStickyRegExp = true;\n    }\n\n    return _this;\n  }\n\n  _createClass(ContextDependency, [{\n    key: \"getResourceIdentifier\",\n    value: function getResourceIdentifier() {\n      return \"context\".concat(this.options.request, \" \").concat(this.options.recursive, \" \") + \"\".concat(regExpToString(this.options.regExp), \" \").concat(regExpToString(this.options.include), \" \").concat(regExpToString(this.options.exclude), \" \") + \"\".concat(this.options.mode, \" \").concat(this.options.chunkName, \" \") + \"\".concat(JSON.stringify(this.options.groupOptions));\n    }\n  }, {\n    key: \"getWarnings\",\n    value: function getWarnings() {\n      var warnings = _get(_getPrototypeOf(ContextDependency.prototype), \"getWarnings\", this).call(this) || [];\n\n      if (this.critical) {\n        warnings.push(new CriticalDependencyWarning(this.critical));\n      }\n\n      if (this.hadGlobalOrStickyRegExp) {\n        warnings.push(new CriticalDependencyWarning(\"Contexts can't use RegExps with the 'g' or 'y' flags.\"));\n      }\n\n      return warnings;\n    }\n  }]);\n\n  return ContextDependency;\n}(Dependency); // TODO remove in webpack 5\n\n\nObject.defineProperty(ContextDependency.prototype, \"async\", {\n  configurable: false,\n  get: function get() {\n    throw new Error(\"ContextDependency.async was removed. Use ContextDependency.options.mode instead.\");\n  },\n  set: function set() {\n    throw new Error(\"ContextDependency.async was removed. Pass options.mode to constructor instead\");\n  }\n});\nmodule.exports = ContextDependency;","map":null,"metadata":{},"sourceType":"script"}