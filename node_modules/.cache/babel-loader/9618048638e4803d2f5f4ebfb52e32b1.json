{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar RequireIncludeDependency = require(\"./RequireIncludeDependency\");\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function RequireIncludeDependencyParserPlugin() {\n    _classCallCheck(this, RequireIncludeDependencyParserPlugin);\n  }\n\n  _createClass(RequireIncludeDependencyParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      parser.hooks.call.for(\"require.include\").tap(\"RequireIncludeDependencyParserPlugin\", function (expr) {\n        if (expr.arguments.length !== 1) return;\n        var param = parser.evaluateExpression(expr.arguments[0]);\n        if (!param.isString()) return;\n        var dep = new RequireIncludeDependency(param.string, expr.range);\n        dep.loc = expr.loc;\n        parser.state.current.addDependency(dep);\n        return true;\n      });\n    }\n  }]);\n\n  return RequireIncludeDependencyParserPlugin;\n}();","map":null,"metadata":{},"sourceType":"script"}