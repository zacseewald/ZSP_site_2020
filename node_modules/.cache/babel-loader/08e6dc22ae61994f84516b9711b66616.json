{"ast":null,"code":"// A writer for when we don't know what kind of thing\n// the thing is.  That is, it's not explicitly set,\n// so we're going to make it whatever the thing already\n// is, or \"File\"\n//\n// Until then, collect all events.\nmodule.exports = ProxyWriter;\n\nvar Writer = require('./writer.js');\n\nvar getType = require('./get-type.js');\n\nvar inherits = require('inherits');\n\nvar collect = require('./collect.js');\n\nvar fs = require('fs');\n\ninherits(ProxyWriter, Writer);\n\nfunction ProxyWriter(props) {\n  var self = this;\n\n  if (!(self instanceof ProxyWriter)) {\n    throw new Error('ProxyWriter must be called as constructor.');\n  }\n\n  self.props = props;\n  self._needDrain = false;\n  Writer.call(self, props);\n}\n\nProxyWriter.prototype._stat = function () {\n  var self = this;\n  var props = self.props; // stat the thing to see what the proxy should be.\n\n  var stat = props.follow ? 'stat' : 'lstat';\n  fs[stat](props.path, function (er, current) {\n    var type;\n\n    if (er || !current) {\n      type = 'File';\n    } else {\n      type = getType(current);\n    }\n\n    props[type] = true;\n    props.type = self.type = type;\n    self._old = current;\n\n    self._addProxy(Writer(props, current));\n  });\n};\n\nProxyWriter.prototype._addProxy = function (proxy) {\n  // console.error(\"~~ set proxy\", this.path)\n  var self = this;\n\n  if (self._proxy) {\n    return self.error('proxy already set');\n  }\n\n  self._proxy = proxy;\n  ['ready', 'error', 'close', 'pipe', 'drain', 'warn'].forEach(function (ev) {\n    proxy.on(ev, self.emit.bind(self, ev));\n  });\n  self.emit('proxy', proxy);\n  var calls = self._buffer;\n  calls.forEach(function (c) {\n    // console.error(\"~~ ~~ proxy buffered call\", c[0], c[1])\n    proxy[c[0]].apply(proxy, c[1]);\n  });\n  self._buffer.length = 0;\n  if (self._needsDrain) self.emit('drain');\n};\n\nProxyWriter.prototype.add = function (entry) {\n  // console.error(\"~~ proxy add\")\n  collect(entry);\n\n  if (!this._proxy) {\n    this._buffer.push(['add', [entry]]);\n\n    this._needDrain = true;\n    return false;\n  }\n\n  return this._proxy.add(entry);\n};\n\nProxyWriter.prototype.write = function (c) {\n  // console.error('~~ proxy write')\n  if (!this._proxy) {\n    this._buffer.push(['write', [c]]);\n\n    this._needDrain = true;\n    return false;\n  }\n\n  return this._proxy.write(c);\n};\n\nProxyWriter.prototype.end = function (c) {\n  // console.error('~~ proxy end')\n  if (!this._proxy) {\n    this._buffer.push(['end', [c]]);\n\n    return false;\n  }\n\n  return this._proxy.end(c);\n};","map":null,"metadata":{},"sourceType":"script"}