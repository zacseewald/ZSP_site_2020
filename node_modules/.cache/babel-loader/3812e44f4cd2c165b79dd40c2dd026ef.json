{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/Users/zs/Desktop/ZSP_site_2020/node_modules/@babel/runtime/helpers/inherits\");\n\nvar Module = require(\"./Module\");\n\nvar _require = require(\"webpack-sources\"),\n    OriginalSource = _require.OriginalSource,\n    RawSource = _require.RawSource;\n\nmodule.exports =\n/*#__PURE__*/\nfunction (_Module) {\n  _inherits(RawModule, _Module);\n\n  function RawModule(source, identifier, readableIdentifier) {\n    var _this;\n\n    _classCallCheck(this, RawModule);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RawModule).call(this, \"javascript/dynamic\", null));\n    _this.sourceStr = source;\n    _this.identifierStr = identifier || _this.sourceStr;\n    _this.readableIdentifierStr = readableIdentifier || _this.identifierStr;\n    _this.built = false;\n    return _this;\n  }\n\n  _createClass(RawModule, [{\n    key: \"identifier\",\n    value: function identifier() {\n      return this.identifierStr;\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this.sourceStr.length;\n    }\n  }, {\n    key: \"readableIdentifier\",\n    value: function readableIdentifier(requestShortener) {\n      return requestShortener.shorten(this.readableIdentifierStr);\n    }\n  }, {\n    key: \"needRebuild\",\n    value: function needRebuild() {\n      return false;\n    }\n  }, {\n    key: \"build\",\n    value: function build(options, compilations, resolver, fs, callback) {\n      this.built = true;\n      this.buildMeta = {};\n      this.buildInfo = {\n        cacheable: true\n      };\n      callback();\n    }\n  }, {\n    key: \"source\",\n    value: function source() {\n      if (this.useSourceMap) {\n        return new OriginalSource(this.sourceStr, this.identifier());\n      } else {\n        return new RawSource(this.sourceStr);\n      }\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      hash.update(this.sourceStr);\n\n      _get(_getPrototypeOf(RawModule.prototype), \"updateHash\", this).call(this, hash);\n    }\n  }]);\n\n  return RawModule;\n}(Module);","map":null,"metadata":{},"sourceType":"script"}